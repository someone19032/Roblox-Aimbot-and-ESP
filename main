-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- State
local aimbotEnabled = false
local fovVisible = true
local fovRadius = 150
local maxDistance = 1000
local useDistance = true
local espBody = false
local espBones = false
local espNames = false
local highlights = {}
local nameTags = {}
local boneLines = {}

-- UI Setup
local screenGui = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
screenGui.Name = "AimbotUI"
screenGui.ResetOnSpawn = false

local function createCheckbox(parent, labelText, yPos)
	local label = Instance.new("TextLabel", parent)
	label.Text = labelText
	label.Position = UDim2.new(0, 10, 0, yPos)
	label.Size = UDim2.new(0, 150, 0, 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1,1,1)
	label.Font = Enum.Font.SourceSans
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local box = Instance.new("TextButton", parent)
	box.Position = UDim2.new(0, 160, 0, yPos)
	box.Size = UDim2.new(0, 20, 0, 20)
	box.Text = "OFF"
	box.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	box.TextColor3 = Color3.new(1,1,1)
	box.Font = Enum.Font.SourceSans
	box.TextSize = 12

	return box
end

local function createInput(parent, labelText, yPos, default)
	local label = Instance.new("TextLabel", parent)
	label.Text = labelText
	label.Position = UDim2.new(0, 10, 0, yPos)
	label.Size = UDim2.new(0, 150, 0, 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1,1,1)
	label.Font = Enum.Font.SourceSans
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local box = Instance.new("TextBox", parent)
	box.Position = UDim2.new(0, 160, 0, yPos)
	box.Size = UDim2.new(0, 50, 0, 20)
	box.Text = tostring(default)
	box.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	box.TextColor3 = Color3.new(1,1,1)
	box.Font = Enum.Font.SourceSans
	box.TextSize = 12

	return box
end

local main = Instance.new("Frame", screenGui)
main.Size = UDim2.new(0, 230, 0, 330)
main.Position = UDim2.new(0, 10, 0.5, -165)
main.BackgroundColor3 = Color3.fromRGB(30,30,30)
main.Active = true
main.Draggable = true

local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1, 0, 0, 25)
title.Text = "ESP & Aimbot"
title.BackgroundColor3 = Color3.fromRGB(40,40,40)
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16

-- ESP checkboxes
local bodyBox = createCheckbox(main, "Body ESP", 30)
local bonesBox = createCheckbox(main, "Bones ESP", 55)
local namesBox = createCheckbox(main, "Names ESP", 80)

-- Aimbot checkboxes and inputs
local aimbotBox = createCheckbox(main, "Aimbot", 110)
local fovToggleBox = createCheckbox(main, "FOV Toggle", 135)
local fovRadiusBox = createInput(main, "FOV Radius", 160, fovRadius)
local distToggleBox = createCheckbox(main, "Distance Check", 190)
local distBox = createInput(main, "Max Distance", 215, maxDistance)

-- FOV circle
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(255,255,255)
fovCircle.Thickness = 1
fovCircle.NumSides = 60
fovCircle.Radius = fovRadius
fovCircle.Filled = false
fovCircle.Visible = true

RunService.RenderStepped:Connect(function()
	local mouse = UserInputService:GetMouseLocation()
	fovCircle.Position = Vector2.new(mouse.X, mouse.Y - 36)
	fovCircle.Radius = fovRadius
	fovCircle.Visible = aimbotEnabled and fovVisible
end)

-- Toggle logic
local function toggle(button, stateVar)
	_G[stateVar] = not _G[stateVar]
	button.Text = _G[stateVar] and "ON" or "OFF"
end

bodyBox.MouseButton1Click:Connect(function()
	espBody = not espBody
	bodyBox.Text = espBody and "ON" or "OFF"
end)

bonesBox.MouseButton1Click:Connect(function()
	espBones = not espBones
	bonesBox.Text = espBones and "ON" or "OFF"
end)

namesBox.MouseButton1Click:Connect(function()
	espNames = not espNames
	namesBox.Text = espNames and "ON" or "OFF"
end)

aimbotBox.MouseButton1Click:Connect(function()
	aimbotEnabled = not aimbotEnabled
	aimbotBox.Text = aimbotEnabled and "ON" or "OFF"
end)

fovToggleBox.MouseButton1Click:Connect(function()
	fovVisible = not fovVisible
	fovToggleBox.Text = fovVisible and "ON" or "OFF"
end)

distToggleBox.MouseButton1Click:Connect(function()
	useDistance = not useDistance
	distToggleBox.Text = useDistance and "ON" or "OFF"
end)

fovRadiusBox.FocusLost:Connect(function()
	local val = tonumber(fovRadiusBox.Text)
	if val then fovRadius = val end
end)

distBox.FocusLost:Connect(function()
	local val = tonumber(distBox.Text)
	if val then maxDistance = val end
end)

-- ESP system
local function updateESP()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			local char = player.Character

			if espBody and not highlights[player] then
				local hl = Instance.new("Highlight", char)
				hl.Name = "BodyESP"
				hl.FillColor = Color3.fromRGB(255,0,0)
				hl.FillTransparency = 0.7
				hl.OutlineColor = Color3.new(0,0,0)
				highlights[player] = hl
			elseif not espBody and highlights[player] then
				highlights[player]:Destroy()
				highlights[player] = nil
			end

			if espNames and not nameTags[player] then
				local tag = Instance.new("BillboardGui", char.Head)
				tag.Size = UDim2.new(0,100,0,20)
				tag.AlwaysOnTop = true
				tag.Name = "NameESP"
				local text = Instance.new("TextLabel", tag)
				text.Size = UDim2.new(1,0,1,0)
				text.Text = player.Name
				text.BackgroundTransparency = 1
				text.TextColor3 = Color3.new(1,1,1)
				text.Font = Enum.Font.SourceSans
				text.TextSize = 14
				nameTags[player] = tag
			elseif not espNames and nameTags[player] then
				nameTags[player]:Destroy()
				nameTags[player] = nil
			end

			if espBones then
				if not boneLines[player] then
					boneLines[player] = {}
				end

				local parts = {"Head", "LeftArm", "RightArm", "LeftLeg", "RightLeg", "Torso", "HumanoidRootPart"}
				for _, partName in ipairs(parts) do
					local part = char:FindFirstChild(partName)
					if part then
						if not boneLines[player][partName] then
							local line = Drawing.new("Line")
							line.Color = Color3.fromRGB(255, 255, 255)
							line.Thickness = 1.5
							boneLines[player][partName] = line
						end

						local pos, onScreen = Camera:WorldToViewportPoint(part.Position)
						if onScreen then
							local headPos = Camera:WorldToViewportPoint(char.Head.Position)
							boneLines[player][partName].From = Vector2.new(headPos.X, headPos.Y)
							boneLines[player][partName].To = Vector2.new(pos.X, pos.Y)
							boneLines[player][partName].Visible = true
						else
							boneLines[player][partName].Visible = false
						end
					end
				end
			else
				if boneLines[player] then
					for _, line in pairs(boneLines[player]) do
						line:Remove()
					end
					boneLines[player] = nil
				end
			end
		end
	end
end

RunService.RenderStepped:Connect(updateESP)

-- Aimbot
local function getClosest()
	local mouse = UserInputService:GetMouseLocation()
	local closest = nil
	local shortest = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			local head = player.Character.Head
			local pos, onScreen = Camera:WorldToViewportPoint(head.Position)
			local dist = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y - 36)).Magnitude
			if onScreen and dist < fovRadius then
				local realDist = (head.Position - Camera.CFrame.Position).Magnitude
				if (not useDistance or realDist <= maxDistance) and dist < shortest then
					shortest = dist
					closest = head
				end
			end
		end
	end

	return closest
end

UserInputService.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 and aimbotEnabled then
		RunService:BindToRenderStep("Aim", Enum.RenderPriority.Camera.Value + 1, function()
			local target = getClosest()
			if target then
				local dir = (target.Position - Camera.CFrame.Position).Unit
				Camera.CFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + dir)
			end
		end)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		RunService:UnbindFromRenderStep("Aim")
	end
end)
